1. Did you use a single message identifier for all message types in your system, or different one for each type of message? Why?  
I use randomly generated oid for the other two message types that I created because I want to sepeare it from messing up the logic.

2. Did you have to change how your seen messages worked? Why or why not? 
No, because I just added another seen type message called counter seen, so that it doesn't mess up with the checking logic from the last lab.

3. How did the state-oriented CRDT we used for Lab 9 differ from the operation-oriented CRDT we used in this lab? 
Instead of categorizing and grouping the message, we don't do that in CRDT for our message types.

4. Is it possible for a node to issue two positive threshold violation messages (i.e. value = 1) without an intervening negative threshold violation messages (i.e. value = -1)? Justify your analysis. What are the consequences of such a scenario?  
No, based on my implementation, it is impossible to do that since I have a guard condition to make sure it doesn't increase twice when it is being violated already

5. How does gossip messaging combined with CRDT compare with Paxos? Consider the threshold counter we implemented for this lab. How would it be different if you tried to use Paxos to implement it? 
The purpose of CRDT is for eventual consistency while Paxos is for consensus. Consensus in a distributed system is more about all of the nodes reaching the same conclusion, while consistency is more about having a valid state.

6. How does gossip messaging combined with CRDT compare with Byzantine consensus (like in a blockchain)? 
The purpose of CRDT is for eventual consistency while Byzantine consensus is for consensus. Consensus in a distributed system is more about all of the nodes reaching the same conclusion, while consistency is more about having a valid state.